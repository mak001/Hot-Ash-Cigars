@model IPagedList<HotAshCigars.Models.Cigar>

@using X.PagedList;
@using X.PagedList.Mvc;

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

@if (Model != null) {
    var first = Model.FirstOrDefault();
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(f => first.Name)
            </th>
            <th>
                @Html.DisplayNameFor(f => first.Description)
            </th>
            <th>
                @Html.DisplayNameFor(f => first.Weight)
            </th>
            <th>
                @Html.DisplayNameFor(f => first.Price)
            </th>
            <th></th>
        </tr>

    @foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Weight)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.ID })
            </td>
        </tr>
    }

    </table>
}

@Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortExp = ViewBag.SortExpression, sortOrder = ViewBag.SortOrder }), new PagedListRenderOptions {
    UlElementClasses = new List<string> {
        "pagination",
        "justify-content-center"
    },
    LiElementClasses = new List<string> {
        "page-item"
    },
    PageClasses = new List<string> {
        "page-link"
    }
})